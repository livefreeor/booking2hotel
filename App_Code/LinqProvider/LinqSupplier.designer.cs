#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotels2thailand.LinqProvider.Supplier
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "booking2hotelXXX")]
	public partial class LinqSupplierDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_supplier_category(tbl_supplier_category instance);
    partial void Updatetbl_supplier_category(tbl_supplier_category instance);
    partial void Deletetbl_supplier_category(tbl_supplier_category instance);
    partial void Inserttbl_supplier_deposit(tbl_supplier_deposit instance);
    partial void Updatetbl_supplier_deposit(tbl_supplier_deposit instance);
    partial void Deletetbl_supplier_deposit(tbl_supplier_deposit instance);
    partial void Inserttbl_supplier_payment_type(tbl_supplier_payment_type instance);
    partial void Updatetbl_supplier_payment_type(tbl_supplier_payment_type instance);
    partial void Deletetbl_supplier_payment_type(tbl_supplier_payment_type instance);
    partial void Inserttbl_phone_cat(tbl_phone_cat instance);
    partial void Updatetbl_phone_cat(tbl_phone_cat instance);
    partial void Deletetbl_phone_cat(tbl_phone_cat instance);
    partial void Inserttbl_bank(tbl_bank instance);
    partial void Updatetbl_bank(tbl_bank instance);
    partial void Deletetbl_bank(tbl_bank instance);
    partial void Inserttbl_account_type(tbl_account_type instance);
    partial void Updatetbl_account_type(tbl_account_type instance);
    partial void Deletetbl_account_type(tbl_account_type instance);
    partial void Inserttbl_supplier_payment_policy(tbl_supplier_payment_policy instance);
    partial void Updatetbl_supplier_payment_policy(tbl_supplier_payment_policy instance);
    partial void Deletetbl_supplier_payment_policy(tbl_supplier_payment_policy instance);
    partial void Inserttbl_supplier_department(tbl_supplier_department instance);
    partial void Updatetbl_supplier_department(tbl_supplier_department instance);
    partial void Deletetbl_supplier_department(tbl_supplier_department instance);
    partial void Inserttbl_supplier_staff_contact(tbl_supplier_staff_contact instance);
    partial void Updatetbl_supplier_staff_contact(tbl_supplier_staff_contact instance);
    partial void Deletetbl_supplier_staff_contact(tbl_supplier_staff_contact instance);
    partial void Inserttbl_supplier_staff_contact_email(tbl_supplier_staff_contact_email instance);
    partial void Updatetbl_supplier_staff_contact_email(tbl_supplier_staff_contact_email instance);
    partial void Deletetbl_supplier_staff_contact_email(tbl_supplier_staff_contact_email instance);
    partial void Inserttbl_supplier_staff_contact_phone(tbl_supplier_staff_contact_phone instance);
    partial void Updatetbl_supplier_staff_contact_phone(tbl_supplier_staff_contact_phone instance);
    partial void Deletetbl_supplier_staff_contact_phone(tbl_supplier_staff_contact_phone instance);
    partial void Inserttbl_supplier_account(tbl_supplier_account instance);
    partial void Updatetbl_supplier_account(tbl_supplier_account instance);
    partial void Deletetbl_supplier_account(tbl_supplier_account instance);
    partial void Inserttbl_supplier(tbl_supplier instance);
    partial void Updatetbl_supplier(tbl_supplier instance);
    partial void Deletetbl_supplier(tbl_supplier instance);
    #endregion
		
		public LinqSupplierDataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["booking2hotelXConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSupplierDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSupplierDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSupplierDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSupplierDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_supplier_category> tbl_supplier_categories
		{
			get
			{
				return this.GetTable<tbl_supplier_category>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_deposit> tbl_supplier_deposits
		{
			get
			{
				return this.GetTable<tbl_supplier_deposit>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_payment_type> tbl_supplier_payment_types
		{
			get
			{
				return this.GetTable<tbl_supplier_payment_type>();
			}
		}
		
		public System.Data.Linq.Table<tbl_phone_cat> tbl_phone_cats
		{
			get
			{
				return this.GetTable<tbl_phone_cat>();
			}
		}
		
		public System.Data.Linq.Table<tbl_bank> tbl_banks
		{
			get
			{
				return this.GetTable<tbl_bank>();
			}
		}
		
		public System.Data.Linq.Table<tbl_account_type> tbl_account_types
		{
			get
			{
				return this.GetTable<tbl_account_type>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_payment_policy> tbl_supplier_payment_policies
		{
			get
			{
				return this.GetTable<tbl_supplier_payment_policy>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_department> tbl_supplier_departments
		{
			get
			{
				return this.GetTable<tbl_supplier_department>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_staff_contact> tbl_supplier_staff_contacts
		{
			get
			{
				return this.GetTable<tbl_supplier_staff_contact>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_staff_contact_email> tbl_supplier_staff_contact_emails
		{
			get
			{
				return this.GetTable<tbl_supplier_staff_contact_email>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_staff_contact_phone> tbl_supplier_staff_contact_phones
		{
			get
			{
				return this.GetTable<tbl_supplier_staff_contact_phone>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier_account> tbl_supplier_accounts
		{
			get
			{
				return this.GetTable<tbl_supplier_account>();
			}
		}
		
		public System.Data.Linq.Table<tbl_supplier> tbl_suppliers
		{
			get
			{
				return this.GetTable<tbl_supplier>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_category")]
	public partial class tbl_supplier_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _cat_id;
		
		private string _title;
		
		private EntitySet<tbl_supplier> _tbl_suppliers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_supplier_category()
		{
			this._tbl_suppliers = new EntitySet<tbl_supplier>(new Action<tbl_supplier>(this.attach_tbl_suppliers), new Action<tbl_supplier>(this.detach_tbl_suppliers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_category_tbl_supplier", Storage="_tbl_suppliers", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<tbl_supplier> tbl_suppliers
		{
			get
			{
				return this._tbl_suppliers;
			}
			set
			{
				this._tbl_suppliers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_suppliers(tbl_supplier entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_category = this;
		}
		
		private void detach_tbl_suppliers(tbl_supplier entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_deposit")]
	public partial class tbl_supplier_deposit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _deposit_id;
		
		private short _supplier_id;
		
		private int _booking_product_id;
		
		private decimal _amount;
		
		private string _comment;
		
		private System.DateTime _date_activity;
		
		private EntityRef<tbl_supplier> _tbl_supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondeposit_idChanging(int value);
    partial void Ondeposit_idChanged();
    partial void Onsupplier_idChanging(short value);
    partial void Onsupplier_idChanged();
    partial void Onbooking_product_idChanging(int value);
    partial void Onbooking_product_idChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Ondate_activityChanging(System.DateTime value);
    partial void Ondate_activityChanged();
    #endregion
		
		public tbl_supplier_deposit()
		{
			this._tbl_supplier = default(EntityRef<tbl_supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deposit_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int deposit_id
		{
			get
			{
				return this._deposit_id;
			}
			set
			{
				if ((this._deposit_id != value))
				{
					this.Ondeposit_idChanging(value);
					this.SendPropertyChanging();
					this._deposit_id = value;
					this.SendPropertyChanged("deposit_id");
					this.Ondeposit_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="SmallInt NOT NULL")]
		public short supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._tbl_supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_product_id", DbType="Int NOT NULL")]
		public int booking_product_id
		{
			get
			{
				return this._booking_product_id;
			}
			set
			{
				if ((this._booking_product_id != value))
				{
					this.Onbooking_product_idChanging(value);
					this.SendPropertyChanging();
					this._booking_product_id = value;
					this.SendPropertyChanged("booking_product_id");
					this.Onbooking_product_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Money NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_activity", DbType="SmallDateTime NOT NULL")]
		public System.DateTime date_activity
		{
			get
			{
				return this._date_activity;
			}
			set
			{
				if ((this._date_activity != value))
				{
					this.Ondate_activityChanging(value);
					this.SendPropertyChanging();
					this._date_activity = value;
					this.SendPropertyChanged("date_activity");
					this.Ondate_activityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_deposit", Storage="_tbl_supplier", ThisKey="supplier_id", OtherKey="supplier_id", IsForeignKey=true)]
		public tbl_supplier tbl_supplier
		{
			get
			{
				return this._tbl_supplier.Entity;
			}
			set
			{
				tbl_supplier previousValue = this._tbl_supplier.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier.Entity = null;
						previousValue.tbl_supplier_deposits.Remove(this);
					}
					this._tbl_supplier.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_deposits.Add(this);
						this._supplier_id = value.supplier_id;
					}
					else
					{
						this._supplier_id = default(short);
					}
					this.SendPropertyChanged("tbl_supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_payment_type")]
	public partial class tbl_supplier_payment_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _payment_type_id;
		
		private string _title;
		
		private string _detail;
		
		private EntitySet<tbl_supplier> _tbl_suppliers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_type_idChanging(short value);
    partial void Onpayment_type_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndetailChanging(string value);
    partial void OndetailChanged();
    #endregion
		
		public tbl_supplier_payment_type()
		{
			this._tbl_suppliers = new EntitySet<tbl_supplier>(new Action<tbl_supplier>(this.attach_tbl_suppliers), new Action<tbl_supplier>(this.detach_tbl_suppliers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_type_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short payment_type_id
		{
			get
			{
				return this._payment_type_id;
			}
			set
			{
				if ((this._payment_type_id != value))
				{
					this.Onpayment_type_idChanging(value);
					this.SendPropertyChanging();
					this._payment_type_id = value;
					this.SendPropertyChanged("payment_type_id");
					this.Onpayment_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this.OndetailChanging(value);
					this.SendPropertyChanging();
					this._detail = value;
					this.SendPropertyChanged("detail");
					this.OndetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_payment_type_tbl_supplier", Storage="_tbl_suppliers", ThisKey="payment_type_id", OtherKey="payment_type_id")]
		public EntitySet<tbl_supplier> tbl_suppliers
		{
			get
			{
				return this._tbl_suppliers;
			}
			set
			{
				this._tbl_suppliers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_suppliers(tbl_supplier entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_payment_type = this;
		}
		
		private void detach_tbl_suppliers(tbl_supplier entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_payment_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_phone_cat")]
	public partial class tbl_phone_cat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _cat_id;
		
		private string _title;
		
		private EntitySet<tbl_supplier_staff_contact_phone> _tbl_supplier_staff_contact_phones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_phone_cat()
		{
			this._tbl_supplier_staff_contact_phones = new EntitySet<tbl_supplier_staff_contact_phone>(new Action<tbl_supplier_staff_contact_phone>(this.attach_tbl_supplier_staff_contact_phones), new Action<tbl_supplier_staff_contact_phone>(this.detach_tbl_supplier_staff_contact_phones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_phone_cat_tbl_supplier_staff_contact_phone", Storage="_tbl_supplier_staff_contact_phones", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<tbl_supplier_staff_contact_phone> tbl_supplier_staff_contact_phones
		{
			get
			{
				return this._tbl_supplier_staff_contact_phones;
			}
			set
			{
				this._tbl_supplier_staff_contact_phones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_supplier_staff_contact_phones(tbl_supplier_staff_contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.tbl_phone_cat = this;
		}
		
		private void detach_tbl_supplier_staff_contact_phones(tbl_supplier_staff_contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.tbl_phone_cat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_bank")]
	public partial class tbl_bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _bank_id;
		
		private string _title;
		
		private EntitySet<tbl_supplier_account> _tbl_supplier_accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbank_idChanging(byte value);
    partial void Onbank_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_bank()
		{
			this._tbl_supplier_accounts = new EntitySet<tbl_supplier_account>(new Action<tbl_supplier_account>(this.attach_tbl_supplier_accounts), new Action<tbl_supplier_account>(this.detach_tbl_supplier_accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte bank_id
		{
			get
			{
				return this._bank_id;
			}
			set
			{
				if ((this._bank_id != value))
				{
					this.Onbank_idChanging(value);
					this.SendPropertyChanging();
					this._bank_id = value;
					this.SendPropertyChanged("bank_id");
					this.Onbank_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_bank_tbl_supplier_account", Storage="_tbl_supplier_accounts", ThisKey="bank_id", OtherKey="bank_id")]
		public EntitySet<tbl_supplier_account> tbl_supplier_accounts
		{
			get
			{
				return this._tbl_supplier_accounts;
			}
			set
			{
				this._tbl_supplier_accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_supplier_accounts(tbl_supplier_account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_bank = this;
		}
		
		private void detach_tbl_supplier_accounts(tbl_supplier_account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_account_type")]
	public partial class tbl_account_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _type_id;
		
		private string _title;
		
		private EntitySet<tbl_supplier_account> _tbl_supplier_accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontype_idChanging(byte value);
    partial void Ontype_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_account_type()
		{
			this._tbl_supplier_accounts = new EntitySet<tbl_supplier_account>(new Action<tbl_supplier_account>(this.attach_tbl_supplier_accounts), new Action<tbl_supplier_account>(this.detach_tbl_supplier_accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_account_type_tbl_supplier_account", Storage="_tbl_supplier_accounts", ThisKey="type_id", OtherKey="type_id")]
		public EntitySet<tbl_supplier_account> tbl_supplier_accounts
		{
			get
			{
				return this._tbl_supplier_accounts;
			}
			set
			{
				this._tbl_supplier_accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_supplier_accounts(tbl_supplier_account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_account_type = this;
		}
		
		private void detach_tbl_supplier_accounts(tbl_supplier_account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_account_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_payment_policy")]
	public partial class tbl_supplier_payment_policy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _policy_id;
		
		private short _supplier_id;
		
		private System.DateTime _date_start;
		
		private System.DateTime _date_end;
		
		private byte _day_advance;
		
		private EntityRef<tbl_supplier> _tbl_supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpolicy_idChanging(int value);
    partial void Onpolicy_idChanged();
    partial void Onsupplier_idChanging(short value);
    partial void Onsupplier_idChanged();
    partial void Ondate_startChanging(System.DateTime value);
    partial void Ondate_startChanged();
    partial void Ondate_endChanging(System.DateTime value);
    partial void Ondate_endChanged();
    partial void Onday_advanceChanging(byte value);
    partial void Onday_advanceChanged();
    #endregion
		
		public tbl_supplier_payment_policy()
		{
			this._tbl_supplier = default(EntityRef<tbl_supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policy_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int policy_id
		{
			get
			{
				return this._policy_id;
			}
			set
			{
				if ((this._policy_id != value))
				{
					this.Onpolicy_idChanging(value);
					this.SendPropertyChanging();
					this._policy_id = value;
					this.SendPropertyChanged("policy_id");
					this.Onpolicy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._tbl_supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime date_start
		{
			get
			{
				return this._date_start;
			}
			set
			{
				if ((this._date_start != value))
				{
					this.Ondate_startChanging(value);
					this.SendPropertyChanging();
					this._date_start = value;
					this.SendPropertyChanged("date_start");
					this.Ondate_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_end", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime date_end
		{
			get
			{
				return this._date_end;
			}
			set
			{
				if ((this._date_end != value))
				{
					this.Ondate_endChanging(value);
					this.SendPropertyChanging();
					this._date_end = value;
					this.SendPropertyChanged("date_end");
					this.Ondate_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day_advance", DbType="TinyInt NOT NULL")]
		public byte day_advance
		{
			get
			{
				return this._day_advance;
			}
			set
			{
				if ((this._day_advance != value))
				{
					this.Onday_advanceChanging(value);
					this.SendPropertyChanging();
					this._day_advance = value;
					this.SendPropertyChanged("day_advance");
					this.Onday_advanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_payment_policy", Storage="_tbl_supplier", ThisKey="supplier_id", OtherKey="supplier_id", IsForeignKey=true)]
		public tbl_supplier tbl_supplier
		{
			get
			{
				return this._tbl_supplier.Entity;
			}
			set
			{
				tbl_supplier previousValue = this._tbl_supplier.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier.Entity = null;
						previousValue.tbl_supplier_payment_policies.Remove(this);
					}
					this._tbl_supplier.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_payment_policies.Add(this);
						this._supplier_id = value.supplier_id;
					}
					else
					{
						this._supplier_id = default(short);
					}
					this.SendPropertyChanged("tbl_supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_department")]
	public partial class tbl_supplier_department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _department_id;
		
		private string _title;
		
		private EntitySet<tbl_supplier_staff_contact> _tbl_supplier_staff_contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondepartment_idChanging(byte value);
    partial void Ondepartment_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_supplier_department()
		{
			this._tbl_supplier_staff_contacts = new EntitySet<tbl_supplier_staff_contact>(new Action<tbl_supplier_staff_contact>(this.attach_tbl_supplier_staff_contacts), new Action<tbl_supplier_staff_contact>(this.detach_tbl_supplier_staff_contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_department_tbl_supplier_staff_contact", Storage="_tbl_supplier_staff_contacts", ThisKey="department_id", OtherKey="department_id")]
		public EntitySet<tbl_supplier_staff_contact> tbl_supplier_staff_contacts
		{
			get
			{
				return this._tbl_supplier_staff_contacts;
			}
			set
			{
				this._tbl_supplier_staff_contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_supplier_staff_contacts(tbl_supplier_staff_contact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_department = this;
		}
		
		private void detach_tbl_supplier_staff_contacts(tbl_supplier_staff_contact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_staff_contact")]
	public partial class tbl_supplier_staff_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _staff_id;
		
		private short _supplier_id;
		
		private byte _department_id;
		
		private string _title;
		
		private string _comment;
		
		private bool _status;
		
		private EntitySet<tbl_supplier_staff_contact_email> _tbl_supplier_staff_contact_emails;
		
		private EntitySet<tbl_supplier_staff_contact_phone> _tbl_supplier_staff_contact_phones;
		
		private EntityRef<tbl_supplier_department> _tbl_supplier_department;
		
		private EntityRef<tbl_supplier> _tbl_supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void Onsupplier_idChanging(short value);
    partial void Onsupplier_idChanged();
    partial void Ondepartment_idChanging(byte value);
    partial void Ondepartment_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public tbl_supplier_staff_contact()
		{
			this._tbl_supplier_staff_contact_emails = new EntitySet<tbl_supplier_staff_contact_email>(new Action<tbl_supplier_staff_contact_email>(this.attach_tbl_supplier_staff_contact_emails), new Action<tbl_supplier_staff_contact_email>(this.detach_tbl_supplier_staff_contact_emails));
			this._tbl_supplier_staff_contact_phones = new EntitySet<tbl_supplier_staff_contact_phone>(new Action<tbl_supplier_staff_contact_phone>(this.attach_tbl_supplier_staff_contact_phones), new Action<tbl_supplier_staff_contact_phone>(this.detach_tbl_supplier_staff_contact_phones));
			this._tbl_supplier_department = default(EntityRef<tbl_supplier_department>);
			this._tbl_supplier = default(EntityRef<tbl_supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="SmallInt NOT NULL")]
		public short supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._tbl_supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="TinyInt NOT NULL")]
		public byte department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._tbl_supplier_department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(4000)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_staff_contact_tbl_supplier_staff_contact_email", Storage="_tbl_supplier_staff_contact_emails", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<tbl_supplier_staff_contact_email> tbl_supplier_staff_contact_emails
		{
			get
			{
				return this._tbl_supplier_staff_contact_emails;
			}
			set
			{
				this._tbl_supplier_staff_contact_emails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_staff_contact_tbl_supplier_staff_contact_phone", Storage="_tbl_supplier_staff_contact_phones", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<tbl_supplier_staff_contact_phone> tbl_supplier_staff_contact_phones
		{
			get
			{
				return this._tbl_supplier_staff_contact_phones;
			}
			set
			{
				this._tbl_supplier_staff_contact_phones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_department_tbl_supplier_staff_contact", Storage="_tbl_supplier_department", ThisKey="department_id", OtherKey="department_id", IsForeignKey=true)]
		public tbl_supplier_department tbl_supplier_department
		{
			get
			{
				return this._tbl_supplier_department.Entity;
			}
			set
			{
				tbl_supplier_department previousValue = this._tbl_supplier_department.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier_department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier_department.Entity = null;
						previousValue.tbl_supplier_staff_contacts.Remove(this);
					}
					this._tbl_supplier_department.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_staff_contacts.Add(this);
						this._department_id = value.department_id;
					}
					else
					{
						this._department_id = default(byte);
					}
					this.SendPropertyChanged("tbl_supplier_department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_staff_contact", Storage="_tbl_supplier", ThisKey="supplier_id", OtherKey="supplier_id", IsForeignKey=true)]
		public tbl_supplier tbl_supplier
		{
			get
			{
				return this._tbl_supplier.Entity;
			}
			set
			{
				tbl_supplier previousValue = this._tbl_supplier.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier.Entity = null;
						previousValue.tbl_supplier_staff_contacts.Remove(this);
					}
					this._tbl_supplier.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_staff_contacts.Add(this);
						this._supplier_id = value.supplier_id;
					}
					else
					{
						this._supplier_id = default(short);
					}
					this.SendPropertyChanged("tbl_supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_supplier_staff_contact_emails(tbl_supplier_staff_contact_email entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_staff_contact = this;
		}
		
		private void detach_tbl_supplier_staff_contact_emails(tbl_supplier_staff_contact_email entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_staff_contact = null;
		}
		
		private void attach_tbl_supplier_staff_contact_phones(tbl_supplier_staff_contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_staff_contact = this;
		}
		
		private void detach_tbl_supplier_staff_contact_phones(tbl_supplier_staff_contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier_staff_contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_staff_contact_email")]
	public partial class tbl_supplier_staff_contact_email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _email_id;
		
		private int _staff_id;
		
		private string _email;
		
		private bool _status;
		
		private EntityRef<tbl_supplier_staff_contact> _tbl_supplier_staff_contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemail_idChanging(int value);
    partial void Onemail_idChanged();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public tbl_supplier_staff_contact_email()
		{
			this._tbl_supplier_staff_contact = default(EntityRef<tbl_supplier_staff_contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int email_id
		{
			get
			{
				return this._email_id;
			}
			set
			{
				if ((this._email_id != value))
				{
					this.Onemail_idChanging(value);
					this.SendPropertyChanging();
					this._email_id = value;
					this.SendPropertyChanged("email_id");
					this.Onemail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="Int NOT NULL")]
		public int staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._tbl_supplier_staff_contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_staff_contact_tbl_supplier_staff_contact_email", Storage="_tbl_supplier_staff_contact", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public tbl_supplier_staff_contact tbl_supplier_staff_contact
		{
			get
			{
				return this._tbl_supplier_staff_contact.Entity;
			}
			set
			{
				tbl_supplier_staff_contact previousValue = this._tbl_supplier_staff_contact.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier_staff_contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier_staff_contact.Entity = null;
						previousValue.tbl_supplier_staff_contact_emails.Remove(this);
					}
					this._tbl_supplier_staff_contact.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_staff_contact_emails.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(int);
					}
					this.SendPropertyChanged("tbl_supplier_staff_contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_staff_contact_phone")]
	public partial class tbl_supplier_staff_contact_phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _phone_id;
		
		private byte _cat_id;
		
		private int _staff_id;
		
		private string _code_country;
		
		private string _code_local;
		
		private string _phone_number;
		
		private bool _status;
		
		private EntityRef<tbl_phone_cat> _tbl_phone_cat;
		
		private EntityRef<tbl_supplier_staff_contact> _tbl_supplier_staff_contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onphone_idChanging(int value);
    partial void Onphone_idChanged();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void Oncode_countryChanging(string value);
    partial void Oncode_countryChanged();
    partial void Oncode_localChanging(string value);
    partial void Oncode_localChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public tbl_supplier_staff_contact_phone()
		{
			this._tbl_phone_cat = default(EntityRef<tbl_phone_cat>);
			this._tbl_supplier_staff_contact = default(EntityRef<tbl_supplier_staff_contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int phone_id
		{
			get
			{
				return this._phone_id;
			}
			set
			{
				if ((this._phone_id != value))
				{
					this.Onphone_idChanging(value);
					this.SendPropertyChanging();
					this._phone_id = value;
					this.SendPropertyChanged("phone_id");
					this.Onphone_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="TinyInt NOT NULL")]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._tbl_phone_cat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="Int NOT NULL")]
		public int staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._tbl_supplier_staff_contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_country", DbType="VarChar(50)")]
		public string code_country
		{
			get
			{
				return this._code_country;
			}
			set
			{
				if ((this._code_country != value))
				{
					this.Oncode_countryChanging(value);
					this.SendPropertyChanging();
					this._code_country = value;
					this.SendPropertyChanged("code_country");
					this.Oncode_countryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_local", DbType="VarChar(50)")]
		public string code_local
		{
			get
			{
				return this._code_local;
			}
			set
			{
				if ((this._code_local != value))
				{
					this.Oncode_localChanging(value);
					this.SendPropertyChanging();
					this._code_local = value;
					this.SendPropertyChanged("code_local");
					this.Oncode_localChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_phone_cat_tbl_supplier_staff_contact_phone", Storage="_tbl_phone_cat", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public tbl_phone_cat tbl_phone_cat
		{
			get
			{
				return this._tbl_phone_cat.Entity;
			}
			set
			{
				tbl_phone_cat previousValue = this._tbl_phone_cat.Entity;
				if (((previousValue != value) 
							|| (this._tbl_phone_cat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_phone_cat.Entity = null;
						previousValue.tbl_supplier_staff_contact_phones.Remove(this);
					}
					this._tbl_phone_cat.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_staff_contact_phones.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(byte);
					}
					this.SendPropertyChanged("tbl_phone_cat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_staff_contact_tbl_supplier_staff_contact_phone", Storage="_tbl_supplier_staff_contact", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public tbl_supplier_staff_contact tbl_supplier_staff_contact
		{
			get
			{
				return this._tbl_supplier_staff_contact.Entity;
			}
			set
			{
				tbl_supplier_staff_contact previousValue = this._tbl_supplier_staff_contact.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier_staff_contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier_staff_contact.Entity = null;
						previousValue.tbl_supplier_staff_contact_phones.Remove(this);
					}
					this._tbl_supplier_staff_contact.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_staff_contact_phones.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(int);
					}
					this.SendPropertyChanged("tbl_supplier_staff_contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier_account")]
	public partial class tbl_supplier_account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _acount_id;
		
		private byte _bank_id;
		
		private byte _type_id;
		
		private short _supplier_id;
		
		private string _account_title;
		
		private string _account_name;
		
		private string _account_number;
		
		private string _account_branch;
		
		private bool _flag_default;
		
		private string _comment;
		
		private EntityRef<tbl_account_type> _tbl_account_type;
		
		private EntityRef<tbl_bank> _tbl_bank;
		
		private EntityRef<tbl_supplier> _tbl_supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onacount_idChanging(short value);
    partial void Onacount_idChanged();
    partial void Onbank_idChanging(byte value);
    partial void Onbank_idChanged();
    partial void Ontype_idChanging(byte value);
    partial void Ontype_idChanged();
    partial void Onsupplier_idChanging(short value);
    partial void Onsupplier_idChanged();
    partial void Onaccount_titleChanging(string value);
    partial void Onaccount_titleChanged();
    partial void Onaccount_nameChanging(string value);
    partial void Onaccount_nameChanged();
    partial void Onaccount_numberChanging(string value);
    partial void Onaccount_numberChanged();
    partial void Onaccount_branchChanging(string value);
    partial void Onaccount_branchChanged();
    partial void Onflag_defaultChanging(bool value);
    partial void Onflag_defaultChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public tbl_supplier_account()
		{
			this._tbl_account_type = default(EntityRef<tbl_account_type>);
			this._tbl_bank = default(EntityRef<tbl_bank>);
			this._tbl_supplier = default(EntityRef<tbl_supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acount_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short acount_id
		{
			get
			{
				return this._acount_id;
			}
			set
			{
				if ((this._acount_id != value))
				{
					this.Onacount_idChanging(value);
					this.SendPropertyChanging();
					this._acount_id = value;
					this.SendPropertyChanged("acount_id");
					this.Onacount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_id", DbType="TinyInt NOT NULL")]
		public byte bank_id
		{
			get
			{
				return this._bank_id;
			}
			set
			{
				if ((this._bank_id != value))
				{
					if (this._tbl_bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbank_idChanging(value);
					this.SendPropertyChanging();
					this._bank_id = value;
					this.SendPropertyChanged("bank_id");
					this.Onbank_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="TinyInt NOT NULL")]
		public byte type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._tbl_account_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="SmallInt NOT NULL")]
		public short supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._tbl_supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string account_title
		{
			get
			{
				return this._account_title;
			}
			set
			{
				if ((this._account_title != value))
				{
					this.Onaccount_titleChanging(value);
					this.SendPropertyChanging();
					this._account_title = value;
					this.SendPropertyChanged("account_title");
					this.Onaccount_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string account_name
		{
			get
			{
				return this._account_name;
			}
			set
			{
				if ((this._account_name != value))
				{
					this.Onaccount_nameChanging(value);
					this.SendPropertyChanging();
					this._account_name = value;
					this.SendPropertyChanged("account_name");
					this.Onaccount_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_branch", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string account_branch
		{
			get
			{
				return this._account_branch;
			}
			set
			{
				if ((this._account_branch != value))
				{
					this.Onaccount_branchChanging(value);
					this.SendPropertyChanging();
					this._account_branch = value;
					this.SendPropertyChanged("account_branch");
					this.Onaccount_branchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag_default", DbType="Bit NOT NULL")]
		public bool flag_default
		{
			get
			{
				return this._flag_default;
			}
			set
			{
				if ((this._flag_default != value))
				{
					this.Onflag_defaultChanging(value);
					this.SendPropertyChanging();
					this._flag_default = value;
					this.SendPropertyChanged("flag_default");
					this.Onflag_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_account_type_tbl_supplier_account", Storage="_tbl_account_type", ThisKey="type_id", OtherKey="type_id", IsForeignKey=true)]
		public tbl_account_type tbl_account_type
		{
			get
			{
				return this._tbl_account_type.Entity;
			}
			set
			{
				tbl_account_type previousValue = this._tbl_account_type.Entity;
				if (((previousValue != value) 
							|| (this._tbl_account_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_account_type.Entity = null;
						previousValue.tbl_supplier_accounts.Remove(this);
					}
					this._tbl_account_type.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_accounts.Add(this);
						this._type_id = value.type_id;
					}
					else
					{
						this._type_id = default(byte);
					}
					this.SendPropertyChanged("tbl_account_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_bank_tbl_supplier_account", Storage="_tbl_bank", ThisKey="bank_id", OtherKey="bank_id", IsForeignKey=true)]
		public tbl_bank tbl_bank
		{
			get
			{
				return this._tbl_bank.Entity;
			}
			set
			{
				tbl_bank previousValue = this._tbl_bank.Entity;
				if (((previousValue != value) 
							|| (this._tbl_bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_bank.Entity = null;
						previousValue.tbl_supplier_accounts.Remove(this);
					}
					this._tbl_bank.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_accounts.Add(this);
						this._bank_id = value.bank_id;
					}
					else
					{
						this._bank_id = default(byte);
					}
					this.SendPropertyChanged("tbl_bank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_account", Storage="_tbl_supplier", ThisKey="supplier_id", OtherKey="supplier_id", IsForeignKey=true)]
		public tbl_supplier tbl_supplier
		{
			get
			{
				return this._tbl_supplier.Entity;
			}
			set
			{
				tbl_supplier previousValue = this._tbl_supplier.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier.Entity = null;
						previousValue.tbl_supplier_accounts.Remove(this);
					}
					this._tbl_supplier.Entity = value;
					if ((value != null))
					{
						value.tbl_supplier_accounts.Add(this);
						this._supplier_id = value.supplier_id;
					}
					else
					{
						this._supplier_id = default(short);
					}
					this.SendPropertyChanged("tbl_supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_supplier")]
	public partial class tbl_supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _supplier_id;
		
		private byte _cat_id;
		
		private short _payment_type_id;
		
		private string _title;
		
		private string _title_common;
		
		private string _title_company;
		
		private string _address;
		
		private string _address_office;
		
		private string _comment;
		
		private byte _tax_vat;
		
		private byte _tax_service;
		
		private byte _tax_local;
		
		private bool _status;
		
		private string _suffix_user_extranet;
		
		private EntitySet<tbl_supplier_deposit> _tbl_supplier_deposits;
		
		private EntitySet<tbl_supplier_payment_policy> _tbl_supplier_payment_policies;
		
		private EntitySet<tbl_supplier_staff_contact> _tbl_supplier_staff_contacts;
		
		private EntitySet<tbl_supplier_account> _tbl_supplier_accounts;
		
		private EntityRef<tbl_supplier_category> _tbl_supplier_category;
		
		private EntityRef<tbl_supplier_payment_type> _tbl_supplier_payment_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsupplier_idChanging(short value);
    partial void Onsupplier_idChanged();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void Onpayment_type_idChanging(short value);
    partial void Onpayment_type_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Ontitle_commonChanging(string value);
    partial void Ontitle_commonChanged();
    partial void Ontitle_companyChanging(string value);
    partial void Ontitle_companyChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onaddress_officeChanging(string value);
    partial void Onaddress_officeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Ontax_vatChanging(byte value);
    partial void Ontax_vatChanged();
    partial void Ontax_serviceChanging(byte value);
    partial void Ontax_serviceChanged();
    partial void Ontax_localChanging(byte value);
    partial void Ontax_localChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void Onsuffix_user_extranetChanging(string value);
    partial void Onsuffix_user_extranetChanged();
    #endregion
		
		public tbl_supplier()
		{
			this._tbl_supplier_deposits = new EntitySet<tbl_supplier_deposit>(new Action<tbl_supplier_deposit>(this.attach_tbl_supplier_deposits), new Action<tbl_supplier_deposit>(this.detach_tbl_supplier_deposits));
			this._tbl_supplier_payment_policies = new EntitySet<tbl_supplier_payment_policy>(new Action<tbl_supplier_payment_policy>(this.attach_tbl_supplier_payment_policies), new Action<tbl_supplier_payment_policy>(this.detach_tbl_supplier_payment_policies));
			this._tbl_supplier_staff_contacts = new EntitySet<tbl_supplier_staff_contact>(new Action<tbl_supplier_staff_contact>(this.attach_tbl_supplier_staff_contacts), new Action<tbl_supplier_staff_contact>(this.detach_tbl_supplier_staff_contacts));
			this._tbl_supplier_accounts = new EntitySet<tbl_supplier_account>(new Action<tbl_supplier_account>(this.attach_tbl_supplier_accounts), new Action<tbl_supplier_account>(this.detach_tbl_supplier_accounts));
			this._tbl_supplier_category = default(EntityRef<tbl_supplier_category>);
			this._tbl_supplier_payment_type = default(EntityRef<tbl_supplier_payment_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="TinyInt NOT NULL")]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._tbl_supplier_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_type_id", DbType="SmallInt NOT NULL")]
		public short payment_type_id
		{
			get
			{
				return this._payment_type_id;
			}
			set
			{
				if ((this._payment_type_id != value))
				{
					if (this._tbl_supplier_payment_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_type_idChanging(value);
					this.SendPropertyChanging();
					this._payment_type_id = value;
					this.SendPropertyChanged("payment_type_id");
					this.Onpayment_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_common", DbType="VarChar(1000)")]
		public string title_common
		{
			get
			{
				return this._title_common;
			}
			set
			{
				if ((this._title_common != value))
				{
					this.Ontitle_commonChanging(value);
					this.SendPropertyChanging();
					this._title_common = value;
					this.SendPropertyChanged("title_common");
					this.Ontitle_commonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_company", DbType="VarChar(1000)")]
		public string title_company
		{
			get
			{
				return this._title_company;
			}
			set
			{
				if ((this._title_company != value))
				{
					this.Ontitle_companyChanging(value);
					this.SendPropertyChanging();
					this._title_company = value;
					this.SendPropertyChanged("title_company");
					this.Ontitle_companyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_office", DbType="VarChar(5000)")]
		public string address_office
		{
			get
			{
				return this._address_office;
			}
			set
			{
				if ((this._address_office != value))
				{
					this.Onaddress_officeChanging(value);
					this.SendPropertyChanging();
					this._address_office = value;
					this.SendPropertyChanged("address_office");
					this.Onaddress_officeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax_vat", DbType="TinyInt NOT NULL")]
		public byte tax_vat
		{
			get
			{
				return this._tax_vat;
			}
			set
			{
				if ((this._tax_vat != value))
				{
					this.Ontax_vatChanging(value);
					this.SendPropertyChanging();
					this._tax_vat = value;
					this.SendPropertyChanged("tax_vat");
					this.Ontax_vatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax_service", DbType="TinyInt NOT NULL")]
		public byte tax_service
		{
			get
			{
				return this._tax_service;
			}
			set
			{
				if ((this._tax_service != value))
				{
					this.Ontax_serviceChanging(value);
					this.SendPropertyChanging();
					this._tax_service = value;
					this.SendPropertyChanged("tax_service");
					this.Ontax_serviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax_local", DbType="TinyInt NOT NULL")]
		public byte tax_local
		{
			get
			{
				return this._tax_local;
			}
			set
			{
				if ((this._tax_local != value))
				{
					this.Ontax_localChanging(value);
					this.SendPropertyChanging();
					this._tax_local = value;
					this.SendPropertyChanged("tax_local");
					this.Ontax_localChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suffix_user_extranet", DbType="VarChar(1000)")]
		public string suffix_user_extranet
		{
			get
			{
				return this._suffix_user_extranet;
			}
			set
			{
				if ((this._suffix_user_extranet != value))
				{
					this.Onsuffix_user_extranetChanging(value);
					this.SendPropertyChanging();
					this._suffix_user_extranet = value;
					this.SendPropertyChanged("suffix_user_extranet");
					this.Onsuffix_user_extranetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_deposit", Storage="_tbl_supplier_deposits", ThisKey="supplier_id", OtherKey="supplier_id")]
		public EntitySet<tbl_supplier_deposit> tbl_supplier_deposits
		{
			get
			{
				return this._tbl_supplier_deposits;
			}
			set
			{
				this._tbl_supplier_deposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_payment_policy", Storage="_tbl_supplier_payment_policies", ThisKey="supplier_id", OtherKey="supplier_id")]
		public EntitySet<tbl_supplier_payment_policy> tbl_supplier_payment_policies
		{
			get
			{
				return this._tbl_supplier_payment_policies;
			}
			set
			{
				this._tbl_supplier_payment_policies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_staff_contact", Storage="_tbl_supplier_staff_contacts", ThisKey="supplier_id", OtherKey="supplier_id")]
		public EntitySet<tbl_supplier_staff_contact> tbl_supplier_staff_contacts
		{
			get
			{
				return this._tbl_supplier_staff_contacts;
			}
			set
			{
				this._tbl_supplier_staff_contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_tbl_supplier_account", Storage="_tbl_supplier_accounts", ThisKey="supplier_id", OtherKey="supplier_id")]
		public EntitySet<tbl_supplier_account> tbl_supplier_accounts
		{
			get
			{
				return this._tbl_supplier_accounts;
			}
			set
			{
				this._tbl_supplier_accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_category_tbl_supplier", Storage="_tbl_supplier_category", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public tbl_supplier_category tbl_supplier_category
		{
			get
			{
				return this._tbl_supplier_category.Entity;
			}
			set
			{
				tbl_supplier_category previousValue = this._tbl_supplier_category.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier_category.Entity = null;
						previousValue.tbl_suppliers.Remove(this);
					}
					this._tbl_supplier_category.Entity = value;
					if ((value != null))
					{
						value.tbl_suppliers.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(byte);
					}
					this.SendPropertyChanged("tbl_supplier_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_supplier_payment_type_tbl_supplier", Storage="_tbl_supplier_payment_type", ThisKey="payment_type_id", OtherKey="payment_type_id", IsForeignKey=true)]
		public tbl_supplier_payment_type tbl_supplier_payment_type
		{
			get
			{
				return this._tbl_supplier_payment_type.Entity;
			}
			set
			{
				tbl_supplier_payment_type previousValue = this._tbl_supplier_payment_type.Entity;
				if (((previousValue != value) 
							|| (this._tbl_supplier_payment_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_supplier_payment_type.Entity = null;
						previousValue.tbl_suppliers.Remove(this);
					}
					this._tbl_supplier_payment_type.Entity = value;
					if ((value != null))
					{
						value.tbl_suppliers.Add(this);
						this._payment_type_id = value.payment_type_id;
					}
					else
					{
						this._payment_type_id = default(short);
					}
					this.SendPropertyChanged("tbl_supplier_payment_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_supplier_deposits(tbl_supplier_deposit entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = this;
		}
		
		private void detach_tbl_supplier_deposits(tbl_supplier_deposit entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = null;
		}
		
		private void attach_tbl_supplier_payment_policies(tbl_supplier_payment_policy entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = this;
		}
		
		private void detach_tbl_supplier_payment_policies(tbl_supplier_payment_policy entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = null;
		}
		
		private void attach_tbl_supplier_staff_contacts(tbl_supplier_staff_contact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = this;
		}
		
		private void detach_tbl_supplier_staff_contacts(tbl_supplier_staff_contact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = null;
		}
		
		private void attach_tbl_supplier_accounts(tbl_supplier_account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = this;
		}
		
		private void detach_tbl_supplier_accounts(tbl_supplier_account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_supplier = null;
		}
	}
}
#pragma warning restore 1591
