#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotels2thailand.LinqProvider.Staff
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "booking2hotelXXX")]
	public partial class LinqStaffDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_authorize_staff(tbl_authorize_staff instance);
    partial void Updatetbl_authorize_staff(tbl_authorize_staff instance);
    partial void Deletetbl_authorize_staff(tbl_authorize_staff instance);
    partial void Inserttbl_staff_activity(tbl_staff_activity instance);
    partial void Updatetbl_staff_activity(tbl_staff_activity instance);
    partial void Deletetbl_staff_activity(tbl_staff_activity instance);
    partial void Inserttbl_staff_activity_cat(tbl_staff_activity_cat instance);
    partial void Updatetbl_staff_activity_cat(tbl_staff_activity_cat instance);
    partial void Deletetbl_staff_activity_cat(tbl_staff_activity_cat instance);
    partial void Inserttbl_staff_authorize(tbl_staff_authorize instance);
    partial void Updatetbl_staff_authorize(tbl_staff_authorize instance);
    partial void Deletetbl_staff_authorize(tbl_staff_authorize instance);
    partial void Inserttbl_staff_product(tbl_staff_product instance);
    partial void Updatetbl_staff_product(tbl_staff_product instance);
    partial void Deletetbl_staff_product(tbl_staff_product instance);
    partial void Inserttbl_staff_cat(tbl_staff_cat instance);
    partial void Updatetbl_staff_cat(tbl_staff_cat instance);
    partial void Deletetbl_staff_cat(tbl_staff_cat instance);
    partial void Inserttbl_staff(tbl_staff instance);
    partial void Updatetbl_staff(tbl_staff instance);
    partial void Deletetbl_staff(tbl_staff instance);
    partial void Inserttbl_staff_session(tbl_staff_session instance);
    partial void Updatetbl_staff_session(tbl_staff_session instance);
    partial void Deletetbl_staff_session(tbl_staff_session instance);
    #endregion
		
		public LinqStaffDataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["booking2hotelXConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqStaffDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqStaffDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqStaffDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqStaffDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_authorize_staff> tbl_authorize_staffs
		{
			get
			{
				return this.GetTable<tbl_authorize_staff>();
			}
		}
		
		public System.Data.Linq.Table<tbl_staff_activity> tbl_staff_activities
		{
			get
			{
				return this.GetTable<tbl_staff_activity>();
			}
		}
		
		public System.Data.Linq.Table<tbl_staff_activity_cat> tbl_staff_activity_cats
		{
			get
			{
				return this.GetTable<tbl_staff_activity_cat>();
			}
		}
		
		public System.Data.Linq.Table<tbl_staff_authorize> tbl_staff_authorizes
		{
			get
			{
				return this.GetTable<tbl_staff_authorize>();
			}
		}
		
		public System.Data.Linq.Table<tbl_staff_product> tbl_staff_products
		{
			get
			{
				return this.GetTable<tbl_staff_product>();
			}
		}
		
		public System.Data.Linq.Table<tbl_staff_cat> tbl_staff_cats
		{
			get
			{
				return this.GetTable<tbl_staff_cat>();
			}
		}
		
		public System.Data.Linq.Table<tbl_staff> tbl_staffs
		{
			get
			{
				return this.GetTable<tbl_staff>();
			}
		}
		
		public System.Data.Linq.Table<tbl_staff_session> tbl_staff_sessions
		{
			get
			{
				return this.GetTable<tbl_staff_session>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_authorize_staff")]
	public partial class tbl_authorize_staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _authorize_id;
		
		private string _title;
		
		private EntitySet<tbl_staff_authorize> _tbl_staff_authorizes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onauthorize_idChanging(byte value);
    partial void Onauthorize_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_authorize_staff()
		{
			this._tbl_staff_authorizes = new EntitySet<tbl_staff_authorize>(new Action<tbl_staff_authorize>(this.attach_tbl_staff_authorizes), new Action<tbl_staff_authorize>(this.detach_tbl_staff_authorizes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorize_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte authorize_id
		{
			get
			{
				return this._authorize_id;
			}
			set
			{
				if ((this._authorize_id != value))
				{
					this.Onauthorize_idChanging(value);
					this.SendPropertyChanging();
					this._authorize_id = value;
					this.SendPropertyChanged("authorize_id");
					this.Onauthorize_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_authorize_staff_tbl_staff_authorize", Storage="_tbl_staff_authorizes", ThisKey="authorize_id", OtherKey="authorize_id")]
		public EntitySet<tbl_staff_authorize> tbl_staff_authorizes
		{
			get
			{
				return this._tbl_staff_authorizes;
			}
			set
			{
				this._tbl_staff_authorizes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_staff_authorizes(tbl_staff_authorize entity)
		{
			this.SendPropertyChanging();
			entity.tbl_authorize_staff = this;
		}
		
		private void detach_tbl_staff_authorizes(tbl_staff_authorize entity)
		{
			this.SendPropertyChanging();
			entity.tbl_authorize_staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_staff_activity")]
	public partial class tbl_staff_activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _activity_id;
		
		private short _staff_id;
		
		private System.Nullable<int> _product_id;
		
		private System.Nullable<int> _booking_id;
		
		private System.Nullable<short> _supplier_id;
		
		private byte _cat_id;
		
		private System.DateTime _date_activity;
		
		private string _comment;
		
		private EntityRef<tbl_staff_activity_cat> _tbl_staff_activity_cat;
		
		private EntityRef<tbl_staff> _tbl_staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onactivity_idChanging(int value);
    partial void Onactivity_idChanged();
    partial void Onstaff_idChanging(short value);
    partial void Onstaff_idChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void Onbooking_idChanging(System.Nullable<int> value);
    partial void Onbooking_idChanged();
    partial void Onsupplier_idChanging(System.Nullable<short> value);
    partial void Onsupplier_idChanged();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void Ondate_activityChanging(System.DateTime value);
    partial void Ondate_activityChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public tbl_staff_activity()
		{
			this._tbl_staff_activity_cat = default(EntityRef<tbl_staff_activity_cat>);
			this._tbl_staff = default(EntityRef<tbl_staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int activity_id
		{
			get
			{
				return this._activity_id;
			}
			set
			{
				if ((this._activity_id != value))
				{
					this.Onactivity_idChanging(value);
					this.SendPropertyChanging();
					this._activity_id = value;
					this.SendPropertyChanged("activity_id");
					this.Onactivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="SmallInt NOT NULL")]
		public short staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._tbl_staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
		public System.Nullable<int> product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_id", DbType="Int")]
		public System.Nullable<int> booking_id
		{
			get
			{
				return this._booking_id;
			}
			set
			{
				if ((this._booking_id != value))
				{
					this.Onbooking_idChanging(value);
					this.SendPropertyChanging();
					this._booking_id = value;
					this.SendPropertyChanged("booking_id");
					this.Onbooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="SmallInt")]
		public System.Nullable<short> supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="TinyInt NOT NULL")]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._tbl_staff_activity_cat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_activity", DbType="SmallDateTime NOT NULL")]
		public System.DateTime date_activity
		{
			get
			{
				return this._date_activity;
			}
			set
			{
				if ((this._date_activity != value))
				{
					this.Ondate_activityChanging(value);
					this.SendPropertyChanging();
					this._date_activity = value;
					this.SendPropertyChanged("date_activity");
					this.Ondate_activityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_activity_cat_tbl_staff_activity", Storage="_tbl_staff_activity_cat", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public tbl_staff_activity_cat tbl_staff_activity_cat
		{
			get
			{
				return this._tbl_staff_activity_cat.Entity;
			}
			set
			{
				tbl_staff_activity_cat previousValue = this._tbl_staff_activity_cat.Entity;
				if (((previousValue != value) 
							|| (this._tbl_staff_activity_cat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_staff_activity_cat.Entity = null;
						previousValue.tbl_staff_activities.Remove(this);
					}
					this._tbl_staff_activity_cat.Entity = value;
					if ((value != null))
					{
						value.tbl_staff_activities.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(byte);
					}
					this.SendPropertyChanged("tbl_staff_activity_cat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_tbl_staff_activity", Storage="_tbl_staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public tbl_staff tbl_staff
		{
			get
			{
				return this._tbl_staff.Entity;
			}
			set
			{
				tbl_staff previousValue = this._tbl_staff.Entity;
				if (((previousValue != value) 
							|| (this._tbl_staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_staff.Entity = null;
						previousValue.tbl_staff_activities.Remove(this);
					}
					this._tbl_staff.Entity = value;
					if ((value != null))
					{
						value.tbl_staff_activities.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(short);
					}
					this.SendPropertyChanged("tbl_staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_staff_activity_cat")]
	public partial class tbl_staff_activity_cat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _cat_id;
		
		private string _title;
		
		private EntitySet<tbl_staff_activity> _tbl_staff_activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_staff_activity_cat()
		{
			this._tbl_staff_activities = new EntitySet<tbl_staff_activity>(new Action<tbl_staff_activity>(this.attach_tbl_staff_activities), new Action<tbl_staff_activity>(this.detach_tbl_staff_activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_activity_cat_tbl_staff_activity", Storage="_tbl_staff_activities", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<tbl_staff_activity> tbl_staff_activities
		{
			get
			{
				return this._tbl_staff_activities;
			}
			set
			{
				this._tbl_staff_activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_staff_activities(tbl_staff_activity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff_activity_cat = this;
		}
		
		private void detach_tbl_staff_activities(tbl_staff_activity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff_activity_cat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_staff_authorize")]
	public partial class tbl_staff_authorize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _staff_id;
		
		private byte _authorize_id;
		
		private EntityRef<tbl_authorize_staff> _tbl_authorize_staff;
		
		private EntityRef<tbl_staff> _tbl_staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(short value);
    partial void Onstaff_idChanged();
    partial void Onauthorize_idChanging(byte value);
    partial void Onauthorize_idChanged();
    #endregion
		
		public tbl_staff_authorize()
		{
			this._tbl_authorize_staff = default(EntityRef<tbl_authorize_staff>);
			this._tbl_staff = default(EntityRef<tbl_staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._tbl_staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorize_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte authorize_id
		{
			get
			{
				return this._authorize_id;
			}
			set
			{
				if ((this._authorize_id != value))
				{
					if (this._tbl_authorize_staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onauthorize_idChanging(value);
					this.SendPropertyChanging();
					this._authorize_id = value;
					this.SendPropertyChanged("authorize_id");
					this.Onauthorize_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_authorize_staff_tbl_staff_authorize", Storage="_tbl_authorize_staff", ThisKey="authorize_id", OtherKey="authorize_id", IsForeignKey=true)]
		public tbl_authorize_staff tbl_authorize_staff
		{
			get
			{
				return this._tbl_authorize_staff.Entity;
			}
			set
			{
				tbl_authorize_staff previousValue = this._tbl_authorize_staff.Entity;
				if (((previousValue != value) 
							|| (this._tbl_authorize_staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_authorize_staff.Entity = null;
						previousValue.tbl_staff_authorizes.Remove(this);
					}
					this._tbl_authorize_staff.Entity = value;
					if ((value != null))
					{
						value.tbl_staff_authorizes.Add(this);
						this._authorize_id = value.authorize_id;
					}
					else
					{
						this._authorize_id = default(byte);
					}
					this.SendPropertyChanged("tbl_authorize_staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_tbl_staff_authorize", Storage="_tbl_staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public tbl_staff tbl_staff
		{
			get
			{
				return this._tbl_staff.Entity;
			}
			set
			{
				tbl_staff previousValue = this._tbl_staff.Entity;
				if (((previousValue != value) 
							|| (this._tbl_staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_staff.Entity = null;
						previousValue.tbl_staff_authorizes.Remove(this);
					}
					this._tbl_staff.Entity = value;
					if ((value != null))
					{
						value.tbl_staff_authorizes.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(short);
					}
					this.SendPropertyChanged("tbl_staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_staff_product")]
	public partial class tbl_staff_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _staff_id;
		
		private int _product_id;
		
		private EntityRef<tbl_staff> _tbl_staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(short value);
    partial void Onstaff_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    #endregion
		
		public tbl_staff_product()
		{
			this._tbl_staff = default(EntityRef<tbl_staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					if (this._tbl_staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_tbl_staff_product", Storage="_tbl_staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
		public tbl_staff tbl_staff
		{
			get
			{
				return this._tbl_staff.Entity;
			}
			set
			{
				tbl_staff previousValue = this._tbl_staff.Entity;
				if (((previousValue != value) 
							|| (this._tbl_staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_staff.Entity = null;
						previousValue.tbl_staff_products.Remove(this);
					}
					this._tbl_staff.Entity = value;
					if ((value != null))
					{
						value.tbl_staff_products.Add(this);
						this._staff_id = value.staff_id;
					}
					else
					{
						this._staff_id = default(short);
					}
					this.SendPropertyChanged("tbl_staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_staff_cat")]
	public partial class tbl_staff_cat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _cat_id;
		
		private string _title;
		
		private EntitySet<tbl_staff> _tbl_staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public tbl_staff_cat()
		{
			this._tbl_staffs = new EntitySet<tbl_staff>(new Action<tbl_staff>(this.attach_tbl_staffs), new Action<tbl_staff>(this.detach_tbl_staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_cat_tbl_staff", Storage="_tbl_staffs", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<tbl_staff> tbl_staffs
		{
			get
			{
				return this._tbl_staffs;
			}
			set
			{
				this._tbl_staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_staffs(tbl_staff entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff_cat = this;
		}
		
		private void detach_tbl_staffs(tbl_staff entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff_cat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_staff")]
	public partial class tbl_staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _staff_id;
		
		private byte _cat_id;
		
		private System.Nullable<short> _supplier_id;
		
		private string _title;
		
		private string _user_name;
		
		private string _password;
		
		private System.DateTime _last_access;
		
		private bool _status;
		
		private EntitySet<tbl_staff_activity> _tbl_staff_activities;
		
		private EntitySet<tbl_staff_authorize> _tbl_staff_authorizes;
		
		private EntitySet<tbl_staff_product> _tbl_staff_products;
		
		private EntityRef<tbl_staff_cat> _tbl_staff_cat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(short value);
    partial void Onstaff_idChanged();
    partial void Oncat_idChanging(byte value);
    partial void Oncat_idChanged();
    partial void Onsupplier_idChanging(System.Nullable<short> value);
    partial void Onsupplier_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onlast_accessChanging(System.DateTime value);
    partial void Onlast_accessChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public tbl_staff()
		{
			this._tbl_staff_activities = new EntitySet<tbl_staff_activity>(new Action<tbl_staff_activity>(this.attach_tbl_staff_activities), new Action<tbl_staff_activity>(this.detach_tbl_staff_activities));
			this._tbl_staff_authorizes = new EntitySet<tbl_staff_authorize>(new Action<tbl_staff_authorize>(this.attach_tbl_staff_authorizes), new Action<tbl_staff_authorize>(this.detach_tbl_staff_authorizes));
			this._tbl_staff_products = new EntitySet<tbl_staff_product>(new Action<tbl_staff_product>(this.attach_tbl_staff_products), new Action<tbl_staff_product>(this.detach_tbl_staff_products));
			this._tbl_staff_cat = default(EntityRef<tbl_staff_cat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="TinyInt NOT NULL")]
		public byte cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._tbl_staff_cat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="SmallInt")]
		public System.Nullable<short> supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_access", DbType="SmallDateTime NOT NULL")]
		public System.DateTime last_access
		{
			get
			{
				return this._last_access;
			}
			set
			{
				if ((this._last_access != value))
				{
					this.Onlast_accessChanging(value);
					this.SendPropertyChanging();
					this._last_access = value;
					this.SendPropertyChanged("last_access");
					this.Onlast_accessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_tbl_staff_activity", Storage="_tbl_staff_activities", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<tbl_staff_activity> tbl_staff_activities
		{
			get
			{
				return this._tbl_staff_activities;
			}
			set
			{
				this._tbl_staff_activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_tbl_staff_authorize", Storage="_tbl_staff_authorizes", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<tbl_staff_authorize> tbl_staff_authorizes
		{
			get
			{
				return this._tbl_staff_authorizes;
			}
			set
			{
				this._tbl_staff_authorizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_tbl_staff_product", Storage="_tbl_staff_products", ThisKey="staff_id", OtherKey="staff_id")]
		public EntitySet<tbl_staff_product> tbl_staff_products
		{
			get
			{
				return this._tbl_staff_products;
			}
			set
			{
				this._tbl_staff_products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_staff_cat_tbl_staff", Storage="_tbl_staff_cat", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public tbl_staff_cat tbl_staff_cat
		{
			get
			{
				return this._tbl_staff_cat.Entity;
			}
			set
			{
				tbl_staff_cat previousValue = this._tbl_staff_cat.Entity;
				if (((previousValue != value) 
							|| (this._tbl_staff_cat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_staff_cat.Entity = null;
						previousValue.tbl_staffs.Remove(this);
					}
					this._tbl_staff_cat.Entity = value;
					if ((value != null))
					{
						value.tbl_staffs.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(byte);
					}
					this.SendPropertyChanged("tbl_staff_cat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_staff_activities(tbl_staff_activity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff = this;
		}
		
		private void detach_tbl_staff_activities(tbl_staff_activity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff = null;
		}
		
		private void attach_tbl_staff_authorizes(tbl_staff_authorize entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff = this;
		}
		
		private void detach_tbl_staff_authorizes(tbl_staff_authorize entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff = null;
		}
		
		private void attach_tbl_staff_products(tbl_staff_product entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff = this;
		}
		
		private void detach_tbl_staff_products(tbl_staff_product entity)
		{
			this.SendPropertyChanging();
			entity.tbl_staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_staff_session")]
	public partial class tbl_staff_session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SessionLogId;
		
		private short _staff_id;
		
		private byte _lang_Id;
		
		private string _browser;
		
		private string _last_access_url;
		
		private System.DateTime _access_time;
		
		private System.DateTime _leave_time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionLogIdChanging(int value);
    partial void OnSessionLogIdChanged();
    partial void Onstaff_idChanging(short value);
    partial void Onstaff_idChanged();
    partial void Onlang_IdChanging(byte value);
    partial void Onlang_IdChanged();
    partial void OnbrowserChanging(string value);
    partial void OnbrowserChanged();
    partial void Onlast_access_urlChanging(string value);
    partial void Onlast_access_urlChanged();
    partial void Onaccess_timeChanging(System.DateTime value);
    partial void Onaccess_timeChanged();
    partial void Onleave_timeChanging(System.DateTime value);
    partial void Onleave_timeChanged();
    #endregion
		
		public tbl_staff_session()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SessionLogId
		{
			get
			{
				return this._SessionLogId;
			}
			set
			{
				if ((this._SessionLogId != value))
				{
					this.OnSessionLogIdChanging(value);
					this.SendPropertyChanging();
					this._SessionLogId = value;
					this.SendPropertyChanged("SessionLogId");
					this.OnSessionLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lang_Id", DbType="TinyInt NOT NULL")]
		public byte lang_Id
		{
			get
			{
				return this._lang_Id;
			}
			set
			{
				if ((this._lang_Id != value))
				{
					this.Onlang_IdChanging(value);
					this.SendPropertyChanging();
					this._lang_Id = value;
					this.SendPropertyChanged("lang_Id");
					this.Onlang_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_browser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string browser
		{
			get
			{
				return this._browser;
			}
			set
			{
				if ((this._browser != value))
				{
					this.OnbrowserChanging(value);
					this.SendPropertyChanging();
					this._browser = value;
					this.SendPropertyChanged("browser");
					this.OnbrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_access_url", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string last_access_url
		{
			get
			{
				return this._last_access_url;
			}
			set
			{
				if ((this._last_access_url != value))
				{
					this.Onlast_access_urlChanging(value);
					this.SendPropertyChanging();
					this._last_access_url = value;
					this.SendPropertyChanged("last_access_url");
					this.Onlast_access_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_access_time", DbType="SmallDateTime NOT NULL")]
		public System.DateTime access_time
		{
			get
			{
				return this._access_time;
			}
			set
			{
				if ((this._access_time != value))
				{
					this.Onaccess_timeChanging(value);
					this.SendPropertyChanging();
					this._access_time = value;
					this.SendPropertyChanged("access_time");
					this.Onaccess_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leave_time", DbType="SmallDateTime NOT NULL")]
		public System.DateTime leave_time
		{
			get
			{
				return this._leave_time;
			}
			set
			{
				if ((this._leave_time != value))
				{
					this.Onleave_timeChanging(value);
					this.SendPropertyChanging();
					this._leave_time = value;
					this.SendPropertyChanged("leave_time");
					this.Onleave_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
